=============
Release Notes
=============


  diagnostics previously reported via ``metadata-availability``
  subcommand will be reported now as part of
  ``connectivity-datadog-autodiscovery`` suite.

- Streamlined settings by renaming `workloadmeta.remote_process_collector.enabled` and `process_config.language_detection.enabled` to `language_detection.enabled`.

- The command line arguments to the Datadog Agent Trace Agent ``trace-agent``
  have changed from single-dash arguments to double-dash arguments.
  For example, ``-config`` must now be provided as ``--config``.
  Additionally, subcommands have been added, these may be listed with the
  ``--help`` switch. For backward-compatibility reasons the old CLI arguments
  will still work in the foreseeable future but may be removed in future versions.


.. _Release Notes_7.48.0_New Features:

New Features
------------

- Added the kubernetes_state.pod.tolerations metric to the KSM core check

- Grab, base64 decode, and attach trace context from message attributes passed through SNS->SQS->Lambda

- Add kubelet healthz check (check_run.kubernetes_core.kubelet.check) to the Agent's core checks to replace the old kubernetes.kubelet.check generated from Python.

- Tag the aws.lambda span generated by the datadog-extension with a language tag based on runtime information in dotnet and java cases

- Extended the "agent diagnose" CLI command to allow the easy addition of new
  diagnostics for diverse and dispersed Agent code.

- Add support for the ``otlp_config.metrics.sums.initial_cumulative_monotonic_value`` setting.

- [BETA] Adds Golang language and version detection through the system probe. This beta feature can be enabled by setting
  ``system_probe_config.language_detection.enabled`` to ``true`` in your ``system-probe.yaml``.

- Add new kubelet corecheck, which will eventually replace the existing kubelet check.

- Add custom queries to Oracle monitoring.

- Adding new configuration setting ``otlp_config.logs.enabled`` to enable/disable logs support  in the OTLP ingest endpoint.

- Add logsagentexporter, which is used in OTLP agent to translate ingested logs and forward them to logs-agent

- Flush in-flight requests and pending retries to disk at shutdown when disk-based buffering of metrics is enabled
  (for example, when `forwarder_storage_max_size_in_bytes` is set).

- Added a new collector in the process agent in workloadmeta.
  This collector allows for collecting processes when the `process_config.process_collection.enabled` is false 
  and `language_detection.enabled` is true.
  The interval at which this collector collects processes can be adjusted with the setting 
  `workloadmeta.local_process_collector.collection_interval`.

- Tag lambda cold starts and proactive initializations on the root aws.lambda span

- APM - This change improves the acceptance and queueing strategy for trace
  payloads sent to the Trace Agent. These changes create a system of
  backpressure in the Trace Agent, causing it to reject payloads when it
  cannot keep up with the rate of traffic, rather than buffering and causing
  OOM issues.
  
  This change has been shown to increase overall throughput in the Trace Agent
  while decreasing peak resource usage. Existing configurations for CPU and
  memory work at least as well, and often better, with these changes compared to previous Agent versions. This means users do not have to adjust
  their configuration to take advantage of these changes, and they do not
  experience performance degredation as a result of upgrading.


.. _Release Notes_7.48.0_Enhancement Notes:

Enhancement Notes
-----------------

- When `jmx_use_container_support` is enabled you can use `jmx_max_ram_percentage` to set a maximum JVM heap size based off a percentage of the total container memory.

- SNMP profile detection now updates the SNMP profile for a given IP if the device at that IP changes.

- Add ``Process Language Detection Enabled`` in the output of the Agent Status command under the ``Process Agent`` section.

- Improve ``agent diagnose`` command to be executed in context of
  running Agent process.

- Agents are now built with Go ``1.20.7``. This version of Golang fixes ``CVE-2023-29409``.

- Added the ``container.memory.usage.peak`` metric to the container check. It shows the maximum memory usage recorded since the container started.

- Unified ``agent diagnose`` CLI command by removing ``all``,
  ``datadog-connectivity``, and ``metadata-availability`` subcommands.
  These separate subcommands became one of the diagnose suites. The
  ``all`` subcommand became unnecessary.

- APM: Improved performance and memory consumption in obfuscation, both halved on average.

- Agents are now built with Go ``1.20.8``.

- The processor frequency sent in metadata is now a decimal value on Darwin and Windows,
  as it already is on Linux. The precision of the value is increased on Darwin.

- CPU metadata which failed to be collected is no longer sent as empty values on Windows.

- Platform metadata which failed to be collected is no longer sent as empty values on Windows.

- Filesystem metadata is now collected without running the `df` binary on Unix.

- Adds language detection support for JRuby, which is detected as Ruby.

- Add the `oracle.can_connect` metric.

- Add duration to the plan payload.

- Increasing the collection interval for all the checks except for activity samples from 10s to 60s.

- Collect the number of CPUs and physical memory.

- Improve Oracle query metrics algorithm and the fetching time for execution plans.

- OTLP ingest pipeline panics no longer stop the Datadog Agent and instead 
  only shutdown this pipeline. The panic is now available in the OTLP status section.

- During the process check, collect the command name from `/proc/[pid]/comm`. This
  allows more accurate language detection of processes.

- Change how SNMP trap variables with bit enumerations are resolved to hexadecimal strings prefixed with "0x" (previously base64 encoded strings).

- The Datadog agent container image is now using Ubuntu 23.04 lunar
  as the base image.

- Upgraded JMXFetch to `0.47.10 <https://github.com/DataDog/jmxfetch/releases/0.47.10>`.
  This version improves how JMXFetch communicates with the Agent, and fixes a race condition
  where an exception is thrown if the Agent hasn't finished initializing before JMXFetch starts to shut down.

- Added ``collector.worker_utilization`` to the telemetry. This metric represents the amount of time that a runner worker has been running checks.


.. _Release Notes_7.48.0_Deprecation Notes:

Deprecation Notes
-----------------

- The command line arguments to the Datadog Agent Trace Agent ``trace-agent``
  have changed from single-dash arguments to double-dash arguments.
  For example, ``-config`` must now be provided as ``--config``. For backward-
  compatibility reasons the old CLI arguments will still work in the foreseeable
  future but may be removed in future versions.


.. _Release Notes_7.48.0_Security Notes:

Security Notes
--------------

- APM: In order to improve the default customer experience regarding
  sensitive data, the Agent now obfuscates database statements within
  span metadata by default. This includes MongoDB queries,
  ElasticSearch request bodies, and raw commands from Redis and
  MemCached. Previously, this setting was off by default.
  This update could have performance implications, or obfuscate data that
  is not sensitive, and can be disabled or configured through the
  `obfuscation` options within the `apm_config`, or with the
  environment variables prefixed with `DD_APM_OBFUSCATION`. Please read the
  [Data Security documentation for full details](https://docs.datadoghq.com/tracing/configure_data_security/#trace-obfuscation).

- This update ensures the `sql.query` tag is always obfuscated by the Datadog Agent
   even if this tag was already set by a tracer or manually by a user.
   This is to prevent potentially sensitive data from being sent to Datadog.
   If you wish to have a raw, unobfuscated query within a span, then
   manually add a span tag of a different name (for example, `sql.rawquery`).

- Fix ``CVE-2023-39320``, ``CVE-2023-39318``, ``CVE-2023-39319``, and ``CVE-2023-39321``.

- Update OpenSSL from 3.0.9 to 3.0.11.
  This addresses CVEs CVE-2023-2975, CVE-2023-3446, CVE-2023-3817, CVE-2023-4807.


.. _Release Notes_7.48.0_Bug Fixes:

Bug Fixes
---------

- APM: Fix issue of ``agent status`` returning an error when run shortly after 
  starting the trace agent.

- APM: Fix incorrect filenames and line numbers in logs from the trace agent.

- OTLP logs ingestion is now disabled by default. To enable it, set otlp_config.logs.enabled to true.

- Avoids fetching tags for ECS tasks when they're not consumed.

- APM: Concurrency issue at high volumes fixed in obfuscation.

- - Updated ``datadog.agent.sbom_generation_duration`` to only be observed for successful scans.

- Fixes a bug that prevents the Agent from writing permissions information
  about system-probe files when creating a flare.

- Fixed a bug that causes the Agent to report the ``datadog.agent_name.running`` metric with missing tags in some environments with cgroups v1.

- Fix ``dogstatsd_mapper_profiles`` wrong serialization when displaying the configuration (for example ``match_type``
  was shown as ``matchtype``). This also fixes a bug in which the secret management feature was incompatible with
  ``dogstatsd_mapper_profiles`` due to the renaming of the ``match_type`` key in the YAML data.

- Fix a crash in the Cluster Agent when Remote Configuration is disabled

- Corrected a bug in calculating the total size of a container image, now accounting for the configuration file size.

- Fix to the process-agent from picking up processes which are kernel
  threads due integer overflow when parsing ``/proc/<pid>/stat``.

- Fixes a rare bug in the Kubernetes State check that causes the Agent to incorrectly tag the ``kubernetes_state.job.complete`` service check.

- On Windows, the host metadata correctly reflects the Windows 11 version.

- Fix a ``datadog.yaml`` configuration file parsing issue.
  When the ``datadog.yaml`` configuration file contained a complex configuration under ``prometheus.checks[*].configurations[*].metrics``, a parsing error could lead to an OpenMetrics check not being properly scheduled. Instead, the Agent logged the following error::
  
    2023-07-26 14:09:23 UTC | CORE | WARN | (pkg/autodiscovery/common/utils/prometheus.go:77 in buildInstances) | Error processing prometheus configuration: json: unsupported type: map[interface {}]interface {}

- Fixes the KSM check to support HPA v2beta2 again. This stopped working in Agent v7.44.0.

- Counts sent through the no-aggregation pipeline are now sent as rate
  with a forced interval ``10`` to mimick the normal DogStatsD pipelines.

- Bug fix for the wrong query signature.

- Populate OTLP resource attributes in Datadog logs

- Changes mapping for jvm.loaded_classes from process.runtime.jvm.classes.loaded to process.runtime.jvm.classes.current_loaded

- The minimum and maximum estimation for OTLP Histogram to Datadog distribution mapping now ensures the average is within [min, max]. 

- This estimation is only used when the minimum and maximum are not available in the OTLP payload or this is a cumulative payload.

- Fixes a panic in the OTLP ingest metrics pipeline when sending OpenTelemetry runtime metrics

- Set correct tag value "otel_source:datadog_agent" for OTLP logs ingestion

- Removed specific environment variable filter on the Windows platform to fetch ECS task tags.

- `diagnose datadog-connectivity` subcommand now loads and resolves secrets before
  checking connectivity.

- The Agent now starts even if it cannot write events to the Application event log

- Fix Windows Service detection by replacing ``svc.IsAnInteractiveSession()`` (deprecated) with ``svc.IsWindowsService()``


.. _Release Notes_7.48.0_Other Notes:

Other Notes
-----------

- System-probe no longer tries to resolve secrets in configurations.

- Refactor in the logs collection pipeline, the `journald` and `windowsevents`
  support is now using the same pipeline as the rest of the logs collection
  implementations.

- Please note that significant changes have been introduced to the Datadog Trace
  Agent for this release. Though these changes should not alter user-facing agent
  behavior beyond the CLI changes described above, please reach out to support
  should you experience any unexpected behavior.


.. _Release Notes_7.47.1:

7.47.1 / 6.47.1
======

.. _Release Notes_7.47.1_Prelude:

Prelude
-------

Release on: 2023-09-21


.. _Release Notes_7.47.1_Bug Fixes:

Bug Fixes
---------

- Fixes issue with NPM driver restart failing with "File Not Found" error on Windows.

- APM: The ``DD_APM_REPLACE_TAGS`` environment variable and ``apm_config.replace_tags`` setting now properly look for tags with numeric values.

- Fix the issue introduced in `7.47.0` that causes the `SE_DACL_AUTO_INHERITED` flag to be removed from
  the installation drive directory when the installer fails and rolls back.


.. _Release Notes_7.47.0:

7.47.0 / 6.47.0
======

.. _Release Notes_7.47.0_Prelude:

Prelude
-------

Release on: 2023-08-31

- Please refer to the `7.47.0 tag on integrations-core <https://github.com/DataDog/integrations-core/blob/master/AGENT_CHANGELOG.md#datadog-agent-version-7470>`_ for the list of changes on the Core Checks


.. _Release Notes_7.47.0_Upgrade Notes:

Upgrade Notes
-------------

- Embedded Python 3 interpreter is upgraded to 3.9.17 in both Agent 6 and
  Agent 7. Embedded OpenSSL is upgraded to 3.0.9 in Agent 7 on Linux and
  macOS. On Windows, Python 3.9 in Agent 7 is still compiled with OpenSSL 1.1.1.


.. _Release Notes_7.47.0_New Features:

New Features
------------

- Add ability to send an Agent flare from the Datadog Application for Datadog support team troubleshooting.
  This feature requires enabling Remote Configuration.

- * Added workloadmeta remote process collector to collect process metadata from the Process-Agent and store it in the core agent.
  * Added new parameter ``workloadmeta.remote_process_collector.enabled`` to enable the workloadmeta remote process collector.
  * Added a new tag ``collector`` to ``datadog.agent.workloadmeta_remote_client_errors``.

- APM: Added support for obfuscating all Redis command arguments. For any Redis
  command, all arguments will be replaced by a single "?". Configurable using 
  config variable ``apm_config.obfuscation.redis.remove_all_args`` and 
  environment variable ``DD_APM_OBFUSCATION_REDIS_REMOVE_ALL_ARGS``.
  Both accept a boolean value with default value ``false``.

- Added an experimental setting `process_config.language_detection.enabled`. This enables detecting languages for processes.
  This feature is WIP.

- Added an experimental gRPC server to process-agent in order to expose process entities with their detected language.
  This feature is WIP and controlled through the process_config.language_detection.enabled setting.

- The Agent now sends its configuration to Datadog by default to be displayed in the `Agent Configuration` section of
  the host detail panel. See https://docs.datadoghq.com/infrastructure/list/#agent-configuration for more information.
  The Agent configuration is scrubbed of any sensitive information and only contains configuration you've set using
  the configuration file or environment variables.
  To disable this feature set `inventories_configuration_enabled` to `false`.

- The Windows installer can now send a report to Datadog in case of installation failure.

- The Windows installer can now send APM telemetry.

- Add support for Oracle Autonomous Database (Oracle Cloud Infrastructure).

- Add shared memory (a.k.a. system global area - SGA) metric for Oracle databases: `oracle.shared_memory.size`

- With this release, ``remote_config.enabled`` is set to ``true`` by default in the Agent configuration file.
  This causes the Agent to request configuration updates from the Datadog site.
  
  To receive configurations from Datadog, you still need to enable Remote Configuration at the organization level and enable Remote Configuration capability on your API Key from the Datadog application.
  If you don't want the Agent to request configurations from Datadog, set ``remote_config.enabled`` to ``false`` in the Agent configuration file.

- `DD_SERVICE_MAPPING` can be used to rename Serverless inferred spans' service names.

- Adds a new agent command ``stream-event-platform`` to stream the event platform payloads being generated by the agent.
  This will help diagnose issues with payload generation, and should ease validation of payload changes.


.. _Release Notes_7.47.0_Enhancement Notes:

Enhancement Notes
-----------------

- Add two new initContainer metrics to the Kubernetes State Core check: `kubernetes_state.initcontainer.waiting` and `kubernetes_state.initcontainer.restarts`.

- Add the following sysmetrics to improve DBA/SRE/SE perspective: 
  avg_synchronous_single_block_read_latency, active_background_on_cpu, active_background, branch_node_splits, consistent_read_changes,
  consistent_read_gets, active_sessions_on_cpu, os_load, database_cpu_time_ratio, db_block_changes, db_block_gets, dbwr_checkpoints,
  enqueue_deadlocks, execute_without_parse, gc_current_block_received, gc_average_cr_get_time, gc_average_current_get_time, 
  hard_parses, host_cpu_utilization, leaf_nodes_splits, logical_reads, network_traffic_volume, pga_cache_hit, parse_failures, 
  physical_read_bytes, physical_read_io_requests, physical_read_total_io_requests, physical_reads_direct_lobs, 
  physical_read_total_bytes, physical_reads_direct, physical_write_bytes, physical_write_io_requests, physical_write_total_bytes, 
  physical_write_total_io_requests, physical_writes_direct_lobs, physical_writes_direct, process_limit, redo_allocation_hit_ratio, 
  redo_generated, redo_writes, row_cache_hit_ratio, soft_parse_ratio, total_parse_count, user_commits

- Pause containers from the new Kubernetes community registry (`registry.k8s.io/pause`) are now excluded by default for containers and metrics collection.

- [corechecks/snmp] Add forced type ``rate`` as an alternative to ``counter``.

- [corechecks/snmp] Add symbol level ``metric_type`` for table metrics.

- Adds support for including the span.kind tag in APM stats aggregations.

- Allow ``ad_identifiers`` to be used in file based logs integration configs 
  in order to collect logs from disk.

- Agents are now built with Go ``1.20.5``

- Agents are now built with Go ``1.20.6``. This version of Golang fixes `CVE-2023-29406`.

- Improve error handling in External Metrics query logic by running
  queries with errors individually with retry and backoff, and batching
  only queries without errors.

- CPU metadata is now collected without running the `sysctl` binary on Darwin.

- Memory metadata is now collected without running the `sysctl` binary on Darwin.

- Always send the swap size value in metadata as an integer in kilobytes. 

- Platform metadata is now collected without running the `uname` binary on Linux and Darwin.

- Add new metrics for resource aggregation to the Kubernetes State Core check:
  - `kubernetes_state.node.<cpu|memory>_capacity.total`
  - `kubernetes_state.node.<cpu|memory>_allocatable.total`
  - `kubernetes_state.container.<cpu|memory>_requested.total`
  - `kubernetes_state.container.<cpu|memory>_limit.total`

- The kube node name is now reported a host tag ``kube_node``

- [pkg/netflow] Collect `flow_process_nf_errors_count` metric from goflow2.

- APM: Bind ``apm_config.obfuscation.*`` parameters to new obfuscation environment variables. In particular, bind:
  ``apm_config.obfuscation.elasticsearch.enabled`` to ``DD_APM_OBFUSCATION_ELASTICSEARCH_ENABLED``:
  It accepts a boolean value with default value false.
  
  ``apm_config.obfuscation.elasticsearch.keep_values`` to ``DD_APM_OBFUSCATION_ELASTICSEARCH_KEEP_VALUES``
  It accepts a list of strings of the form ``["id1", "id2"]``.
  
  ``apm_config.obfuscation.elasticsearch.obfuscate_sql_values`` to ``DD_APM_OBFUSCATION_ELASTICSEARCH_OBFUSCATE_SQL_VALUES``
  It accepts a list of strings of the form ``["key1", "key2"]``.
  
  ``apm_config.obfuscation.http.remove_paths_with_digits`` to ``DD_APM_OBFUSCATION_HTTP_REMOVE_PATHS_WITH_DIGITS``,
  It accepts a boolean value with default value false.
  
  ``apm_config.obfuscation.http.remove_query_string`` to ``DD_APM_OBFUSCATION_HTTP_REMOVE_QUERY_STRING``,
  It accepts a boolean value with default value false.
  
  ``apm_config.obfuscation.memcached.enabled`` to ``DD_APM_OBFUSCATION_MEMCACHED_ENABLED``:
  It accepts a boolean value with default value false.
  
  ``apm_config.obfuscation.mongodb.enabled`` to ``DD_APM_OBFUSCATION_MONGODB_ENABLED``:
  It accepts a boolean value with default value false.
  
  ``apm_config.obfuscation.mongodb.keep_values`` to ``DD_APM_OBFUSCATION_MONGODB_KEEP_VALUES``
  It accepts a list of strings of the form ``["id1", "id2"]``.
  
  ``apm_config.obfuscation.mongodb.obfuscate_sql_values`` to ``DD_APM_OBFUSCATION_MONGODB_OBFUSCATE_SQL_VALUES``
  It accepts a list of strings of the form ``["key1", "key2"]``.
  
  ``apm_config.obfuscation.redis.enabled`` to ``DD_APM_OBFUSCATION_REDIS_ENABLED``:
  It accepts a boolean value with default value false.
  
  ``apm_config.obfuscation.remove_stack_traces`` to ``DD_APM_OBFUSCATION_REMOVE_STACK_TRACES``:
  It accepts a boolean value with default value false.
  
  ``apm_config.obfuscation.sql_exec_plan.enabled`` to ``DD_APM_OBFUSCATION_SQL_EXEC_PLAN_ENABLED``:
  It accepts a boolean value with default value false.
  
  ``apm_config.obfuscation.sql_exec_plan.keep_values`` to ``DD_APM_OBFUSCATION_SQL_EXEC_PLAN_KEEP_VALUES``
  It accepts a list of strings of the form ``["id1", "id2"]``.
  
  ``apm_config.obfuscation.sql_exec_plan.obfuscate_sql_values`` to ``DD_APM_OBFUSCATION_SQL_EXEC_PLAN_OBFUSCATE_SQL_VALUES``
  It accepts a list of strings of the form ``["key1", "key2"]``.
  
  ``apm_config.obfuscation.sql_exec_plan_normalize.enabled`` to ``DD_APM_OBFUSCATION_SQL_EXEC_PLAN_NORMALIZE_ENABLED``:
  It accepts a boolean value with default value false.
  
  ``apm_config.obfuscation.sql_exec_plan_normalize.keep_values`` to ``DD_APM_OBFUSCATION_SQL_EXEC_PLAN_NORMALIZE_KEEP_VALUES``
  It accepts a list of strings of the form ``["id1", "id2"]``.
  
  ``apm_config.obfuscation.sql_exec_plan_normalize.obfuscate_sql_values`` to ``DD_APM_OBFUSCATION_SQL_EXEC_PLAN_NORMALIZE_OBFUSCATE_SQL_VALUES``
  It accepts a list of strings of the form ``["key1", "key2"]``.

- The Windows installer is now built using WixSharp.

- Refactored the Windows installer custom actions in .Net.

- Remove Oracle from the Heroku build.

- [pkg/snmp/traps] Collect telemetry metrics for SNMP Traps.

- [pkg/networkdevice] Add Meraki fields to NDM Metadata payload.

- [corechecks/snmp] Add ``metric_type`` to metric root and deprecate ``forced_type``.

- [corechecks/snmp] Add ``tags`` to ``interface_configs`` to tag interface metrics

- [corechecks/snmp] Add ``user_profiles`` directory support.


.. _Release Notes_7.47.0_Deprecation Notes:

Deprecation Notes
-----------------

- The `system_probe_config.http_map_cleaner_interval_in_s` configuration has been deprecated. Use `service_monitoring_config.http_map_cleaner_interval_in_s` instead.

- The `system_probe_config.http_idle_connection_ttl_in_s` configuration has been deprecated. Use `service_monitoring_config.http_idle_connection_ttl_in_s` instead.

- The `network_config.http_notification_threshold` configuration has been deprecated. Use `service_monitoring_config.http_notification_threshold` instead.

- The `network_config.http_max_request_fragment` configuration has been deprecated. Use `service_monitoring_config.http_max_request_fragment` instead.

- The `network_config.http_replace_rules` configuration has been deprecated. Use `service_monitoring_config.http_replace_rules` instead.

- The `network_config.max_tracked_http_connections` configuration has been deprecated. Use `service_monitoring_config.max_tracked_http_connections` instead.

- The `network_config.max_http_stats_buffered` configuration has been deprecated. Use `service_monitoring_config.max_http_stats_buffered` instead.

- The `compliance_config.xccdf.enabled` configuration has been deprecated. Use `compliance_config.host_benchmarks.enabled` instead.


.. _Release Notes_7.47.0_Bug Fixes:

Bug Fixes
---------

- APM: Fix a bug introduced in Agent versions 7.44 and 6.44 that
  changed the expected strings separator from comma to space when
  multiple features are defined in DD_APM_FEATURES.
  Now either separator can be used (for example, DD_APM_FEATURES="feat1,feat2" or DD_APM_FEATURES="feat1 feat2").

- Add a workaround for erroneous database connection loss handling in go-ora.

- If no NTP servers are reachable, `datadog-agent status` now displays `ERROR` for the NTP check, rather than `OK`.

- Fixes a bug in auto-discovery annotations processing where two consecutive percent characters were wrongly altered even if they were not part of a ``%%var%%`` template variable pattern.

- Fix memory leak by closing the time ticker in orchestrator check when the check is done.

- Fixes a panic occuring when an entry in ``/etc/services`` does not follow
  the format ``port/protocol``: https://gitlab.com/cznic/libc/-/issues/25

- Fixes the inclusion of the ``security-agent.yaml`` file in the flare.

- [apm] fix an issue for service and peer.service normalization where names starting with a digit are incorrectly considered as invalid

- Fix building a local flare to use the expvar_port from the config instead of the default port. 

- Use a locale-independent format for the swap size sent in the metadata,
  to avoid issues when parsing the value in the frontend.

- Fixes a bug where the metric with timestamps pipeline could have wrongly
  processed metrics without timestamps (when both pipelines were flooded),
  potentially leading to inaccuracies. 

- Fixes an issue where `process_config.max_per_message` and `process_config.max_message_bytes`
  were ignored when set larger than the default values, and increases the limit on accepted values for these 
  variables.

- rtloader: Use `execinfo` only if provided to fix builds on
  C libraries like `musl`.


.. _Release Notes_7.47.0_Other Notes:

Other Notes
-----------

- Service check ``datadog.agent.check_status`` is now disabled by default. To re-enable, 
  set ``integration_check_status_enabled`` to ``true``.


.. _Release Notes_7.46.0:

7.46.0 / 6.46.0
======

.. _Release Notes_7.46.0_Prelude:

Prelude
-------

Release on: 2023-07-10

- Please refer to the `7.46.0 tag on integrations-core <https://github.com/DataDog/integrations-core/blob/master/AGENT_CHANGELOG.md#datadog-agent-version-7460>`_ for the list of changes on the Core Checks


.. _Release Notes_7.46.0_Upgrade Notes:

Upgrade Notes
-------------

- Refactor the SBOM collection parameters from::
  
    conf.d/container_lifecycle.d/conf.yaml existence (A) # to schedule the container lifecycle long running check
    conf.d/container_image.d/conf.yaml     existence (B) # to schedule the container image metadata long running check
    conf.d/sbom.d/conf.yaml                existence (C) # to schedule the SBOM long running check
  
    Inside datadog.yaml:
  
    container_lifecycle:
      enabled:                        (D)  # Used to control the start of the container_lifecycle forwarder but has been decommissioned by #16084 (7.45.0-rc)
      dd_url:                              # \
      additional_endpoints:                # |
      use_compression:                     # |
      compression_level:                   #  > generic parameters for the generic EVP pipeline
                                          # |
      use_v2_api:                          # /
  
    container_image:
      enabled:                        (E)  # Used to control the start of the container_image forwarder but has been decommissioned by #16084 (7.45.0-rc)
      dd_url:                              # \
      additional_endpoints:                # |
      use_compression:                     # |
      compression_level:                   #  > generic parameters for the generic EVP pipeline
                                          # |
      use_v2_api:                          # /
  
    sbom:
      enabled:                        (F)  # control host SBOM collection and do **not** control container-related SBOM since #16084 (7.45.0-rc)
      dd_url:                              # \
      additional_endpoints:                # |
      use_compression:                     # |
      compression_level:                   #  > generic parameters for the generic EVP pipeline
                                          # |
      use_v2_api:                          # /
      analyzers:                      (G)  # trivy analyzers user for host SBOM collection
      cache_directory:                (H)
      clear_cache_on_exit:            (I)
      use_custom_cache:               (J)
      custom_cache_max_disk_size:     (K)
      custom_cache_max_cache_entries: (L)
      cache_clean_interval:           (M)
  
    container_image_collection:
      metadata:
        enabled:                      (N)  # Controls the collection of the container image metadata in workload meta
      sbom:
        enabled:                      (O)
        use_mount:                    (P)
        scan_interval:                (Q)
        scan_timeout:                 (R)
        analyzers:                    (S)  # trivy analyzers user for containers SBOM collection
        check_disk_usage:             (T)
        min_available_disk:           (U)
  
  to::
  
    conf.d/{container_lifecycle,container_image,sbom}.d/conf.yaml no longer needs to be created. A default version is always shipped with the Agent Docker image with an underscore-prefixed ad_identifier that will be synthesized by the agent at runtime based on config {container_lifecycle,container_image,sbom}.enabled parameters.
  
    Inside datadog.yaml:
  
    container_lifecycle:
      enabled:                        (A)  # Replaces the need for creating a conf.d/container_lifecycle.d/conf.yaml file
      dd_url:                              # \
      additional_endpoints:                # |
      use_compression:                     # |
      compression_level:                   #  > unchanged generic parameters for the generic EVP pipeline
                                          # |
      use_v2_api:                          # /
  
    container_image:
      enabled:                        (B)  # Replaces the need for creating a conf.d/container_image.d/conf.yaml file
      dd_url:                              # \
      additional_endpoints:                # |
      use_compression:                     # |
      compression_level:                   #  > unchanged generic parameters for the generic EVP pipeline
                                          # |
      use_v2_api:                          # /
  
    sbom:
      enabled:                        (C)  # Replaces the need for creating a conf.d/sbom.d/conf.yaml file
      dd_url:                              # \
      additional_endpoints:                # |
      use_compression:                     # |
